/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Harambe.java
 *
 * Created on Nov 7, 2016, 2:09:37 PM
 */
package projectd;

import java.util.Random;

/**
 *
 * @author DoctorP
 */
public class Harambe extends javax.swing.JFrame {

    /** Creates new form Harambe */
    public Harambe() {
        initComponents();
    }
    
    String Version = "0.04";
    
    //de equipment
    private Weapon weapon_equiped;
    private Weapon weapon_dropped;
    private Shield Shield_equiped;
    private Shield Shield_dropped;
    private Helmet Helmet_equiped;
    private Helmet Helmet_dropped;
    private Armor Armor_equiped;
    private Armor Armor_dropped;
    
    //de flags
    private boolean drop_isWeapon;
    private boolean drop_isShield;
    private boolean drop_isHelmet;
    private boolean drop_isArmor;
    
    NewGame player = new NewGame();
    
    //misc Variables
    
        Weapon tempdropW;
        Shield tempdropS;
        Helmet tempdropH;
        Armor tempdropA;
    
    public void Level_Up() {
        
        XP_Bar.setValue(0);
        player.Damage += player.Damage / 10;
        XP_Bar.setMaximum(player.Exp_NextLevel);
        double ad_Health = player.Max_Health / 5;
        player.Health += ad_Health;
        player.Max_Health += ad_Health;
        player.Exp_Level = player.Exp_NextLevel;
        player.Char_Level++;
        
    }
    
    public void get_drop() {
        Random rnd1 = new Random();
        int rnd = rnd1.nextInt(3) + 1;
        //reseting the flags
        drop_isWeapon = false;
        drop_isShield = false;
        drop_isHelmet = false;
        drop_isArmor = false;
        switch (rnd) {
            case 1:
                {
                    tempdropW = Weapon.rng_Weap();
                    drop_isWeapon = true;
                    break;
                }
            case 2:
                {
                    tempdropS = Shield.rng_Shield();
                    drop_isShield = true;
                    break;
                }
            case 3:
                {
                    tempdropH = Helmet.rng_Helmet();
                    drop_isHelmet = true;
                    break;
                }
            default:
                {
                    tempdropA = Armor.rng_Armor();
                    drop_isArmor = true;
                    break;
                }
        }
    }
    
    public void Equip() {
        
        if(drop_isWeapon){
            Weapon equipdrop = tempdropW;
            Slot_Weapon.setIcon(equipdrop.sword);
            Slot_Weapon.setToolTipText(equipdrop.name);
            player.Damage+=equipdrop.damage;
        } else if(drop_isShield){
            Shield equipdrop = tempdropS;
            Slot_Shield.setIcon(equipdrop.shield);
            Slot_Shield.setToolTipText(equipdrop.name);
            player.armor+=equipdrop.armor;
        } else if(drop_isHelmet){
            Helmet equipdrop = tempdropH;
            Slot_Helmet.setIcon(equipdrop.helmet);
            Slot_Shield.setToolTipText(equipdrop.name);
            player.armor+=equipdrop.armor;
        } else {
            Armor equipdrop = tempdropA;
            Slot_Armor.setIcon(equipdrop.armor);
            Slot_Armor.setToolTipText(equipdrop.name);
            player.armor+=equipdrop.armor_rating;
        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Slot_Weapon = new javax.swing.JLabel();
        Slot_Helmet = new javax.swing.JLabel();
        Slot_Shield = new javax.swing.JLabel();
        Slot_Armor = new javax.swing.JLabel();
        Slot_Player = new javax.swing.JLabel();
        Player_Health = new javax.swing.JLabel();
        Slot_Enemy = new javax.swing.JLabel();
        Enemy_Health = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Room_num = new javax.swing.JLabel();
        Player_Level = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        LB_PlayerDamage = new javax.swing.JLabel();
        LB_PlayerHealth = new javax.swing.JLabel();
        LB_SwordDamage = new javax.swing.JLabel();
        LB_Armor = new javax.swing.JLabel();
        Max_Health = new javax.swing.JLabel();
        Player_Damage = new javax.swing.JLabel();
        Sword_Damage = new javax.swing.JLabel();
        Armor = new javax.swing.JLabel();
        XP_Bar = new javax.swing.JProgressBar();
        Health_Bar = new javax.swing.JProgressBar();
        Enemy_HealthBar = new javax.swing.JProgressBar();
        Drop = new javax.swing.JLabel();
        LB_Stats = new javax.swing.JLabel();
        test_drop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Slot_Weapon.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Slot_Helmet.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Slot_Shield.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Slot_Armor.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Slot_Player.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Player_Health.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Player_Health.setText("Health: ");

        Slot_Enemy.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        Enemy_Health.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Enemy_Health.setText("Health: ");

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 18)); // NOI18N
        jLabel1.setText("ROOM");

        Room_num.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Player_Level.setText("Level");

        jPanel1.setBackground(new java.awt.Color(253, 255, 231));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        LB_PlayerDamage.setText("Player Damage:");

        LB_PlayerHealth.setText("Maximum Health:");

        LB_SwordDamage.setText("Sword Damage:");

        LB_Armor.setText("Armor:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LB_PlayerHealth)
                    .addComponent(LB_PlayerDamage)
                    .addComponent(LB_SwordDamage)
                    .addComponent(LB_Armor))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Armor, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(Max_Health, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addComponent(Player_Damage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Sword_Damage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Max_Health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LB_PlayerHealth, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_PlayerDamage)
                    .addComponent(Player_Damage, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LB_SwordDamage)
                    .addComponent(Sword_Damage, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LB_Armor)
                    .addComponent(Armor, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Drop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Drop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/projectd/Treasure-chest-free-to-use-clipart.png"))); // NOI18N
        Drop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DropMouseClicked(evt);
            }
        });

        LB_Stats.setText("Stats");

        test_drop.setText("jButton1");
        test_drop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                test_dropActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(Player_Level)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Player_Health, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Slot_Armor, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Slot_Helmet, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Slot_Shield, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(Slot_Weapon, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(LB_Stats))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Health_Bar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(XP_Bar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Slot_Player, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(Room_num, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(161, 161, 161)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Enemy_Health, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Slot_Enemy, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(Enemy_HealthBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(Drop, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(test_drop)))
                .addContainerGap(69, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(442, 442, 442))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Player_Level)
                                .addGap(6, 6, 6)
                                .addComponent(Enemy_Health))
                            .addComponent(Player_Health, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Health_Bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Enemy_HealthBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Slot_Player, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Slot_Weapon, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot_Shield, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot_Helmet, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(Slot_Armor, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(Slot_Enemy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Room_num, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(312, 312, 312)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(XP_Bar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LB_Stats))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Drop, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(test_drop)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DropMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DropMouseClicked
        Drop.setText("test");
    }//GEN-LAST:event_DropMouseClicked

    private void test_dropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_test_dropActionPerformed
        Slot_Weapon.setIcon(Weapon.rng_Weap().sword);
    }//GEN-LAST:event_test_dropActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Harambe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Harambe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Harambe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Harambe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Harambe().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Armor;
    private javax.swing.JLabel Drop;
    private javax.swing.JLabel Enemy_Health;
    private javax.swing.JProgressBar Enemy_HealthBar;
    private javax.swing.JProgressBar Health_Bar;
    private javax.swing.JLabel LB_Armor;
    private javax.swing.JLabel LB_PlayerDamage;
    private javax.swing.JLabel LB_PlayerHealth;
    private javax.swing.JLabel LB_Stats;
    private javax.swing.JLabel LB_SwordDamage;
    private javax.swing.JLabel Max_Health;
    private javax.swing.JLabel Player_Damage;
    private javax.swing.JLabel Player_Health;
    private javax.swing.JLabel Player_Level;
    private javax.swing.JLabel Room_num;
    private javax.swing.JLabel Slot_Armor;
    private javax.swing.JLabel Slot_Enemy;
    private javax.swing.JLabel Slot_Helmet;
    private javax.swing.JLabel Slot_Player;
    private javax.swing.JLabel Slot_Shield;
    private javax.swing.JLabel Slot_Weapon;
    private javax.swing.JLabel Sword_Damage;
    private javax.swing.JProgressBar XP_Bar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton test_drop;
    // End of variables declaration//GEN-END:variables

}
